<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myedumyselect.payment.dao.PaymentDAO">
	<resultMap type="payment" id="paymentMap">
		<id column="payment_id" property="paymentId" />
		<result column="pg" property="pg" />
		<result column="pay_method" property="payMethod" />
		<result column="merchant_uid" property="merchantUid" />
		<result column="name" property="name" />
		<!-- <result column="amount" property="amount" /> -->
		<result column="academy_id" property="academyId" />
		<result column="academy_number" property="academyNumber" />
		<result column="academy_name" property="academyName" />
		<result column="academy_manager_name"
			property="academyManagerName" />
		<result column="academy_manager_email"
			property="academyManagerEmail" />
		<result column="academy_manager_phone"
			property="academyManagerPhone" />
		<result column="payment_status" property="paymentStatus" />
		<result column="payment_date" property="paymentDate" />
		<result column="amount" property="payAmount" />
	</resultMap>

	<!-- <resultMap type="academy" id="academyMap"> <id column="payment_id" 
		property="paymentId" /> <result column="pg" property="pg" /> <result column="pay_method" 
		property="payMethod" /> <result column="merchant_uid" property="merchantUid" 
		/> <result column="name" property="name" /> <result column="academy_id" property="academyId" 
		/> <result column="academy_number" property="academyNumber" /> <result column="academy_name" 
		property="academyName" /> <result column="academy_manager_name" property="academyManagerName" 
		/> <result column="academy_manager_email" property="academyManagerEmail" 
		/> <result column="academy_manager_phone" property="academyManagerPhone" 
		/> <result column="payment_status" property="paymentStatus" /> <result column="payment_date" 
		property="paymentDate" /> <result column="amount" property="payAmount" /> 
		</resultMap> -->

	<sql id="boardSearch">
		<if test="search == 'academy_name'">
		<![CDATA[ academy_name LIKE '%' || #{keyword} || '%' ]]>
		</if>
		<if test="search == 'academy_id'"> 
		<![CDATA[ academy_id LIKE '%' || #{keyword} || '%' ]]>
		</if>
	</sql>

	<!-- 전체 레코드 수 조회 -->
	<select id="boardListCnt" parameterType="payment"
		resultType="int">
		SELECT count(*) FROM
		tb_payment
		<trim prefix=" where (" suffix=")">
			<include refid="boardSearch"></include>
		</trim>
	</select>

	<select id="boardList" parameterType="payment"
		resultMap="paymentMap"> 
		<![CDATA[
		SELECT *
		FROM (
			SELECT /*+ INDEX_DESC(tb_common_board pk_tb_common_board) */
			rownum as rnum, payment_id, pg, pay_method, merchant_uid, name, academy_id, academy_number, academy_name, academy_manager_name,
			academy_manager_email, academy_manager_phone, payment_status, payment_date, amount
			FROM (
				select * from tb_payment
				order by payment_date desc
			) sortedBoardList
			WHERE ]]>
		<trim prefix="(" suffix=") AND " prefixOverrides="AND">
			<include refid="boardSearch"></include>
		</trim>
		<![CDATA[ rownum <= #{pageNum} * #{amount}
		) boardList
		WHERE rnum  > (#{pageNum} - 1 ) * #{amount}
		]]>
	</select>

	<select id="boardDetail" parameterType="payment"
		resultMap="paymentMap">
		SELECT
		*
		FROM tb_payment
		WHERE
		payment_id = #{paymentId}
	</select>

	<delete id="boardDelete" parameterType="payment">
		DELETE FROM
		tb_payment
		WHERE
		payment_id = #{paymentId}
	</delete>


	<select id="paymentSelect" parameterType="payment"
		resultMap="paymentMap">
		SELECT * from tb_payment
		WHERE
		merchant_uid = #{merchantUid}
	</select>

	<!-- <insert id="paymentInsert" parameterType="payment"> insert into tb_payment( 
		payment_id, pg, pay_method, merchant_uid, name, amount, academy_id, academy_number, 
		academy_name, academy_manager_name, academy_manager_email, academy_manager_phone, 
		payment_status, to_char(payment_date, 'YYYYMMDD') as payment_date, ) values 
		( payment_seq.nextval, #{pg}, #{payMethod}, #{merchantUid}, #{name}, #{payAmount}, 
		#{academyId}, #{academyNumber}, #{academyName}, #{academyManagerName}, #{academyManagerEmail}, 
		#{academyManagerPhone}, #{paymentStatus}, sysdate ) </insert> -->
	<insert id="paymentInsert" parameterType="payment">
		insert into tb_payment(
		payment_id,
		pg,
		pay_method,
		merchant_uid,
		name,
		amount,
		academy_id,
		academy_number,
		academy_name,
		academy_manager_name,
		academy_manager_email,
		academy_manager_phone,
		payment_status,
		payment_date
		) values (
		payment_seq.nextval,
		#{pg},
		#{payMethod},
		#{merchantUid},
		#{name},
		#{payAmount},
		#{academyId},
		#{academyNumber},
		#{academyName},
		#{academyManagerName},
		#{academyManagerEmail},
		#{academyManagerPhone},
		#{paymentStatus},
		to_char(sysdate, 'YYYYMMDD')
		)
	</insert>

	<select id="paymentCheck" parameterType="academyLogin"
		resultType="Integer">
		SELECT CASE
		WHEN cnt >= 1 THEN
		CASE
		WHEN TO_DATE(payment_date, 'YYYYMMDD') >= TRUNC(SYSDATE) - 30 THEN 1
		ELSE 0
		END
		ELSE
		0
		END AS result
		FROM (SELECT COUNT(*) AS cnt
		FROM tb_payment
		WHERE academy_id = #{academyId}) sub,
		(SELECT payment_date
		FROM (SELECT payment_date
		FROM tb_payment
		WHERE academy_id = #{academyId}
		ORDER BY TO_DATE(payment_date, 'YYYYMMDD') DESC)
		WHERE ROWNUM = 1) sub2
	</select>


</mapper>