<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.myedumyselect.personal.dao.PersonalLoginDao">

	<resultMap type="personalLogin" id="personalLoginMap">
		<id column="personal_id" property="personalId" />
		<result column="member_type_id" property="memberTypeId" />
		<result column="personal_name" property="personalName" />
		<result column="personal_email" property="personalEmail" />
		<result column="personal_passwd" property="personalPasswd" />
		<result column="personal_birth" property="personalBirth" />
		<result column="personal_address" property="personalAddress" />
		<result column="personal_phone" property="personalPhone" />
		<result column="personal_join_date" property="personalJoinDate" />
		<result column="personal_login_fail_count"
			property="personalLoginFailCount" />
		<result column="personal_account_banned_date"
			property="personalAccountBannedDate" />
		<result column="personal_passwd_change_date"
			property="personalPasswdChangeDate" />
	</resultMap>

	<!-- 로그인 select -->
	<select id="loginProcess" parameterType="personalLogin"
		resultMap="personalLoginMap">
  
		SELECT DISTINCT
		*
		FROM tb_personal
		WHERE
		personal_id =
		#{personalId} AND personal_passwd = #{personalPasswd}
	</select>

	<!-- 로그인 실패 횟수 업데이트 -->
	<update id="updatePersonalLoginFailCount"
		parameterType="personalLogin">
		UPDATE tb_personal
		SET personal_login_fail_count =
		#{personalLoginFailCount}
		WHERE personal_id = #{personalId}
	</update>


	<!-- 로그인 제한 상태 업데이트 쿼리 -->
	<update id="updateAccountBannedDate"
		parameterType="personalLogin">
		UPDATE tb_personal
		SET personal_account_banned_date =
		#{bannedDate}
		WHERE personal_id = #{personalId}
	</update>

	<!-- 아이디 중복체크 -->
	<select id="idCheck" parameterType="personalLogin"
		resultType="int">
		SELECT COUNT(personal_id) FROM tb_personal WHERE
		personal_id = #{personalId}
	</select>

	<!-- 이메일 중복체크 -->
	<select id="emailCheck" parameterType="personalLogin"
		resultType="int">
		SELECT COUNT(personal_email) FROM tb_personal WHERE
		personal_email = #{personalEmail}
	</select>

	<!-- 회원가입 insert -->
	<insert id="personalInsert" parameterType="personalLogin">
		INSERT INTO
		tb_personal (personal_id, personal_name, personal_passwd,
		personal_email, personal_birth, personal_address, personal_phone)
		VALUES (#{personalId}, #{personalName}, #{personalPasswd},
		#{personalEmail}, #{personalBirth},
		#{personalAddress},
		#{personalPhone})
	</insert>


	<!-- 마이페이지 -->
	<select id="personalMyPage" parameterType="personalLogin">
		SELECT personal_id,
		personal_name, personal_email,
		personal_birth,
		personal_address,
		personal_phone
		FROM tb_personal
		WHERE
		personal_id = #{personalId}
	</select>
	<!-- 마이페이지 수정 -->
	<update id="personalUpdate" parameterType="personalLogin">
		UPDATE tb_personal
		SET
		personal_email = #{personalEmail},
		personal_address = #{personalAddress},
		personal_phone = #{personalPhone}
		WHERE
		personal_id = #{personalId}
	</update>


	<!-- 비밀번호 변경 -->
	<update id="updatePersonalPasswd" parameterType="personalLogin">
		UPDATE tb_personal SET
		personal_passwd = #{personalPasswd},
		personal_passwd_change_date = sysdate
		WHERE personal_id = #{personalId}
	</update>


	<resultMap type="matchingBoard" id="matchingBoardMap">
		<id column="matching_no" property="matchingNo" />
		<result column="personal_id" property="personalId" />
		<result column="matching_private" property="matchingPrivate" />
		<result column="matching_passwd" property="matchingPasswd" />
		<result column="matching_register_date"
			property="matchingRegisterDate" />
		<result column="matching_edit_date" property="matchingEditDate" />
		<result column="matching_gu_address"
			property="matchingGuAddress" />
		<result column="matching_dong_address"
			property="matchingDongAddress" />
		<result column="matching_target_grade"
			property="matchingTargetGrade" />
		<result column="matching_target_subject"
			property="matchingTargetSubject" />
		<result column="matching_fee" property="matchingFee" />
		<result column="matching_keyword1" property="matchingKeyword1" />
		<result column="matching_keyword2" property="matchingKeyword2" />
		<result column="matching_keyword3" property="matchingKeyword3" />
		<result column="matching_comment" property="matchingComment" />
	</resultMap>



	<!-- 전체 레코드 수 조회 -->
	<select id="boardListCnt" parameterType="matchingBoard"
		resultType="int">
		SELECT count(*) FROM tb_matching_board
		WHERE personal_id =
		#{personalId}
	</select>

	<!-- 매칭게시판 글 목록 전체 보기 -->
	<select id="boardList" parameterType="matchingBoard"
		resultMap="matchingBoardMap">
			<![CDATA[
			SELECT  matching_no
					, matching_gu_address
					, matching_dong_address
					, matching_target_subject
					, matching_target_grade
					, matching_private
					, matching_register_date
					, personal_id
			FROM   (
	    			SELECT	/*+ INDEX_DESC(tb_matching_board pk_tb_matching_board_pk) */  
	    			rownum as rnum
	    					, matching_no
	    					, matching_gu_address
	    					, matching_dong_address
	    					, matching_target_subject
	    					, matching_target_grade
	    					, matching_private
	    					, matching_register_date
	    					, personal_id
					FROM   	(
							SELECT * FROM tb_matching_board
							WHERE personal_id = #{personalId}
							ORDER BY matching_register_date DESC) sortedList
	    			WHERE ]]>
					<![CDATA[rownum <= #{pageNum} * #{amount}) boardList
					WHERE rnum > (#{pageNum} - 1 ) * #{amount}
					]]>
	</select>


	<!-- 매칭게시판 게시글 상세 보기 -->
	<select id="boardDetail" parameterType="matchingBoard"
		resultMap="matchingBoardMap">
		SELECT matching_no
		, matching_gu_address
		,
		matching_dong_address
		, matching_target_subject
		, matching_target_grade
		, matching_fee
		, matching_keyword1
		, matching_keyword2
		,
		matching_keyword3
		, personal_id
		, to_char (matching_register_date,
		'YYYY-MM-DD') as
		matching_register_date
		, ( SELECT
		COUNT(matching_comment_no)
		FROM tb_matching_comment
		WHERE matching_no =
		tb_matching_board.matching_no) as commentCnt
		, matching_comment
		FROM
		tb_matching_board
		WHERE matching_no = #{matchingNo}
	</select>




</mapper>
